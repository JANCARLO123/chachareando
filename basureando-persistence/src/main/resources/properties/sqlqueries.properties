sql.select.user.forId=select * from usuario where id = ?
sql.select.user.foralias=select * from usuario where alias = ?
sql.select.user.role=select r.clave from rol r inner join usuario_rol ur on (r.id = ur.id_rol) where ur.id_usuario = ?
sql.insert.user=insert into usuario (nombre, apellidos, correo, alias, contrasena, fecha_de_registro) values (?, ?, ?, ?, ?, ?)
sql.insert.user.link.picture=insert into usuario_imagen (id_usuario, id_imagen) values (?, ?)
sql.delete.user=delete from usuario where alias = ?

sql.insert.post=insert into entrada (titulo, fecha_de_creacion, fecha_de_modificacion, estado, contenido, usuario_id) values (?, ?, ?, ?, ?, ?) returning id
sql.select.post=select e.*, u.alias from entrada e inner join usuario u on (u.id=usuario_id) where e.id = ?
sql.select.post.history.user=select e.*, u.alias from entrada e inner join usuario u on (u.id=usuario_id) where tipo='p'%s
sql.select.post.history=select e.*, u.alias from entrada e inner join usuario u on (u.id=usuario_id) where e.tipo='p' order by id desc limit  ? offset ?
sql.select.post.history.count=select count(*) from entrada e inner join usuario u on (u.id=usuario_id) where e.tipo='p'
sql.select.post.history.byDate=select * from entrada e where e.tipo='p' and date_trunc('month', e.fecha_de_creacion) = date_trunc('month', date '?')  limit  ? offset ?
sql.select.post.history.byDate.count=select count(e.*) from entrada e where e.tipo='p' and date_trunc('month', e.fecha_de_creacion) = date_trunc('month', date(?))
sql.select.post.history.byCalendar=select distinct to_char(date_trunc('day', e.fecha_de_creacion), 'DD') as day from entrada e where e.tipo='p' and date_trunc('month', e.fecha_de_creacion) = date_trunc('month', date(?)) order by day asc
sql.select.post.recents.shortList=select e.id entry_id, e.titulo entry_title, u.alias user_alias from entrada e inner join usuario u on (u.id=e.usuario_id) where e.tipo='p' order by fecha_de_creacion desc limit ?
sql.select.post.comments.recents.shortList=select e.id entry_id, e.titulo entry_title, u.alias user_alias  from entrada e join usuario u on(e.usuario_id = u.id) where tipo = 'c' order by e.fecha_de_creacion desc limit ?
sql.select.post.comments=select * from comentarios as c left join entrada as e on e.id=c.id_comentario left join usuario as u on u.id=e.usuario_id where c.id_entrada = ?
sql.select.post.verifyOwner=select case  when count(*) = 0 then 'false' else 'true' END isOwner from entrada e where e.id = ? and e.usuario_id = ?

sql.insert.picture=insert into imagen (nombre, comentario, imagen) values (?, ?, ?) returning id
sql.select.picture=select * from imagen where id = ?
sql.select.picture.id.byUserProfile=select id_imagen from usuario_imagen where id_usuario = ?


sql.tag.searchByName=select t.* from tag t where 1=1%s limit 5
sql.tag.relatedToPost=select t.* from entrada_tag et join tag t on (et.tag_id = t.id) where entrada_id = ?

sql.select.twitter.user.oAuth=insert into twitter_setting (id_usuario, id_twitter, screen_name, oAuthToken, oAuthTokenSecret) values (?, ?, ?, ?, ?)

post.pagination.size=7
post.recent.shortListSize=5